PROBLEM-22:
Count number of subarrays with given Xor K
CODE:
unordered_map<int,int>visited;
    int cpx = 0;
    long long c=0;
    for(int i=0;i<A.size();i++){
        cpx^=A[i];
        if(cpx==B) c++;
        int h = cpx^B;
        if(visited.find(h)!=visited.end()){
            c=c+visited[h];
        }
        visited[cpx]++;
    }
    return c;

    PROBLEM-23:
    Longest Substring without repeat
    CODE:
    class Solution {
public:
    int lengthOfLongestSubstring(string s) {
      
        vector<int>mpp(256,-1);
        int left=0;
        int right =0;
        int n=s.size();
        int len=0;
        while(right<n)
        {
          if(mpp[s[right]] != -1) 
            left=max(mpp[s[right]] + 1 ,left);
            mpp[s[right]] = right;
            len=max(len,right-left+1);
            right++;
        }
        return len;
    }
};