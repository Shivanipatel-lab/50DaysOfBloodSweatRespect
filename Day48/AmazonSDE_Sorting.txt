PROBLEM-1:
Triplet Sum in Array
CODE:
   sort(A, A + n);
       
       for(int i = 0; i < n; i++)
       {
           int left = i + 1;
           int right = n - 1;
           
           while(left < right)
           {
               if(A[i] + A[left] + A[right] == X)
                   return true;
               else if(A[i] + A[left] + A[right] > X)
                   right--;
               else 
                   left++;
           }
       }
       return false;
PROBLEM-2:
Count Inversions
CODE:
long long int inversionCount(long long arr[], long long N)
{
    // Your Code Here
    int inversionCount = 0;
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = i + 1; j < n; j++)
        {
            if (arr[i] > arr[j]) {
                inversionCount++;
            }
        }
    }
    return inversionCount;
}

PROBLEM-3:
Closet 0s 1s and 2s
CODE:
  void segragate012(int arr[], int N)
    {
        // Your Code Here
        sort(arr,arr+N);
    }