PROBLEM:P-13
Wave Array
CODE:

PROBLEM:P-14
Equilibrium Point
CODE:
int equilibriumPoint(long long a[], int n) {
    
        // Your code here
        if(n==1)
        return 1;
        long long b[n];
        b[0]=a[0];
        for(int i=1;i<n;i++)
        {
            b[i]=a[i]+b[i-1];
        }
        for(int i=1;i<n;i++)
        {
            if(b[i-1]==(b[n-1]-b[i]))
            return (i+1);
        }
        return -1;
    }
PROBLEM:P-15
Stickler Thief
CODE:
int FindMaxSum(int arr[], int n)
    {
        // Your code here
        if(n==1)
        return arr[0];
        if(n==2)
        return max(arr[0],arr[1]);
        for(int i=2;i<n;i++)
        {
            if(i==2)
            {
              arr[i]+=arr[i-2];
            }
            else{
                arr[i]+=max(arr[i-2],arr[i-3]);
            }
        }
        return max(arr[n-1],arr[n-2]);
    }
PROBLEM:P-16
Product array puzzle
CODE:
vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        //code here   
        
        vector<long long int>result(n,1);
        if(n==1)
        return result;
        long long int temp=1;
        for(int i=0;i<n;i++)
        
        {
            result[i]=temp;
            temp=temp*nums[i];
        }
        temp=1;
        for(int i=n-1;i>=0;i--)
        {
            result[i]=result[i]*temp;
            temp=temp*nums[i];
        }
        return result;
    }